// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PalasProject.Migrations
{
    [DbContext(typeof(PalasContext))]
    partial class PalasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PalasProject.Models.Impl.ParkingLot", b =>
                {
                    b.Property<int>("ParkingLotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Floor");

                    b.Property<bool>("IsOpen");

                    b.HasKey("ParkingLotId");

                    b.ToTable("ParkingLots");
                });

            modelBuilder.Entity("PalasProject.Models.Impl.ParkingSpot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsAvailable");

                    b.Property<int?>("ParkingLotId");

                    b.HasKey("Id");

                    b.HasIndex("ParkingLotId");

                    b.ToTable("ParkingSpots");
                });

            modelBuilder.Entity("PalasProject.Models.Impl.ParkingSpot", b =>
                {
                    b.HasOne("PalasProject.Models.Impl.ParkingLot", "ParkingLot")
                        .WithMany("ParkingSpots")
                        .HasForeignKey("ParkingLotId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
